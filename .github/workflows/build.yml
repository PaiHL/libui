# build libui-ng
name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  meson-linux:
    strategy:
      fail-fast: false
      matrix:
        # ubuntu-18.04, ubuntu-latest (ubuntu-20.04)
        os: [ubuntu-20.04]
        # x86, x64
        arch: [x64]
        # static, shared
        libtype: [static]
        # debug, debugoptimized, release
        buildtype: [release]
    runs-on: ${{ matrix.os }}
    name: Ubuntu-${{ matrix.arch }}-${{ matrix.libtype }}
    steps:
      - name: Install Meson and Linux Deps
        run: |
          python3 -m pip install --upgrade pip setuptools wheel
          pip3 install meson ninja
          sudo apt-get update -y
          sudo apt-get install -y libgtk-3-dev xvfb

      - name: Checkout
        uses: actions/checkout@v4
      - name: Meson Setup Build
        run: meson setup builddir --buildtype=${{ matrix.buildtype }} --default-library=${{ matrix.libtype }}
      - name: Ninja Build
        run: ninja -C builddir --verbose
      - name: Run Tests
        run: xvfb-run meson test -C builddir --verbose
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Ubuntu-${{ matrix.arch }}-${{ matrix.libtype }}-${{ matrix.buildtype }}
          # lib + header + examples + test + build-log
          path: |
            !builddir/meson-out/*.p/
            builddir/meson-out/*
            ui_unix.h
            ui.h
            builddir/meson-logs/*.txt

  meson-linux-arm64:
    strategy:
      matrix:
        arch: [ aarch64 ]
        libtype: [ static ]
        buildtype: [ release ]
    # The host should always be Linux
    runs-on: ubuntu-20.04
    name: Build on ubuntu-20.04 aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: uraimo/run-on-arch-action@v3
        name: Run commands
        id: runcmd
        with:
          arch: aarch64
          distro: ubuntu20.04

          dockerRunArgs: |
            --volume "${PWD}:/build"

          # Set an output parameter `uname` for use in subsequent steps
          run: |
            cd /build
            apt-get update -y
            apt-get install -y python3 python3-pip
            python3 -m pip install --upgrade pip setuptools wheel
            pip3 install meson ninja
            apt-get install -y libgtk-3-dev xvfb
            meson setup builddir --buildtype=${{ matrix.buildtype }} --default-library=${{ matrix.libtype }}
            ninja -C builddir --verbose
            xvfb-run meson test -C builddir --verbose

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Ubuntu-${{ matrix.arch }}-${{ matrix.libtype }}-${{ matrix.buildtype }}
          # lib + header + examples + test + build-log
          path: |
            !builddir/meson-out/*.p/
            builddir/meson-out/*
            ui_unix.h
            ui.h
            builddir/meson-logs/*.txt
  meson-macos:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]
        arch: [x64, arm64]  # 同时支持 Intel 和 Apple Silicon
        # static, shared
        libtype: [static]
        # debug, debugoptimized, release
        buildtype: [release]
    runs-on: ${{ matrix.os }}
    name: macOS-${{ matrix.arch }}-${{ matrix.libtype }}
    steps:
      - name: Unbreak Python in Github Actions
        run: |
          find /usr/local/bin -lname '*/Library/Frameworks/Python.framework/*' -delete
          sudo rm -rf /Library/Frameworks/Python.framework/
          brew install --force python3 && brew unlink python3 && brew unlink python3 && brew link --overwrite python3
      - name: Install Meson and macOS Deps
        run: |
          brew update
          brew install meson ninja
      - name: Checkout
        uses: actions/checkout@v4
      - name: Meson Setup Build
        run: meson setup builddir --buildtype=${{ matrix.buildtype }} --default-library=${{ matrix.libtype }}
      - name: Ninja Build
        run: ninja -C builddir --verbose
      - name: Run Tests
        run: meson test -C builddir --verbose
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macOS-${{ matrix.arch }}-${{ matrix.libtype }}-${{ matrix.buildtype }}
          # lib + header + examples + test + build-log
          path: |
            !builddir/meson-out/*.p/
            builddir/meson-out/*
            ui_darwin.h
            ui.h
            builddir/meson-logs/*.txt